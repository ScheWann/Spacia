'''
Wrapper script for aggregating spacia results on different receiver pathways.
Need two inputs: spacia output folder generated by the spacia_job.py and the input metadata file.

Example:
Python wrapup_spacia_results.py [path/to/spacia_outputs] [path/to/spacia_input_metadata] 

'''
import pandas as pd
import os
import sys

spacia_output = sys.argv[1]
spacia_metadata = sys.argv[2]

# # Debug purpose
# spacia_output = '/project/shared/xiao_wang/projects/cell2cell_inter/data/shijia_simulation'
# spacia_metadata = spacia_output + '/base_10_pathways/simulation_metadata.txt'
# # --------

meta_data = pd.read_csv(spacia_metadata, index_col=0, sep= '\t')
spacia_folders = [x for x in os.listdir(spacia_output) if 'spacia' in x]

interactions_template = meta_data.dropna(
    subset=['Sender_cells']
    ).Sender_cells.str.split(',', expand=True).stack().reset_index()
interactions_template.columns = ['Receiver', 'x', 'Sender']
interactions_template = interactions_template[['Receiver', 'Sender']]

pathways = pd.DataFrame()
interactions = pd.DataFrame()
b_plus_fdr = pd.DataFrame()
for fd in spacia_folders:
    job_id = fd
    # job_id = job_id[7:]
    abs_path = os.path.join(spacia_output, fd)

    # aggregating beta for different receiver pathways
    res_beta = pd.read_csv(
        os.path.join(abs_path, job_id + '_beta.txt'), sep='\t').mean()
    res_beta = res_beta.reset_index()
    res_beta.index = [job_id] * res_beta.shape[0]
    res_beta.columns = ['Sender_pathway', 'Beta']
    pathways = pathways.append(res_beta)

    # aggregating primamy instances for different receiver pathways
    pip_res = pd.read_csv(
        os.path.join(abs_path, job_id + '_pip.txt'), sep='\t').mean(axis=1)
    assert(pip_res.shape[0] == interactions_template.shape[0]), "Spaca results don't match input!"
    _interactions = interactions_template.copy()
    _interactions.index = [job_id] * _interactions.shape[0]
    _interactions['Primary_instance_score'] = pip_res.values
    interactions = interactions.append(_interactions)

    # aggregating b and FDR for different receiver pathways
    pred_b = pd.read_csv(
        os.path.join(abs_path, job_id + '_b.txt'), sep='\t').iloc[:,1].mean()
    fdr = pd.read_csv(
        os.path.join(abs_path, job_id + '_FDRs.txt'), sep='\t')
    fdr = fdr.reset_index()
    fdr.index = [job_id] * fdr.shape[0]
    fdr.columns = ['Theta_cutoff', 'FDR']
    fdr.Theta_cutoff = fdr.Theta_cutoff / 10
    fdr['b'] = pred_b
    b_plus_fdr = b_plus_fdr.append(fdr)

    # # for simulation only
    # if fd == spacia_folders[0]:
    #     true_beta = pd.read_csv(
    #         os.path.join(spacia_output, '_'.join(job_id.split('_')[:3]), 'betas.csv'),
    #         index_col = 0)
    #     true_beta.columns = [fd]
    #     true_beta.index = [
    #         'Sender_pathway_' + str(i+1) for i in range(true_beta.shape[0])]
    # else:
    #     _true_beta = pd.read_csv(
    #         os.path.join(spacia_output, '_'.join(job_id.split('_')[:3]), 'betas.csv'),
    #         index_col = 0)
    #     true_beta[fd] = _true_beta.values

pathways.to_csv(os.path.join(spacia_output, 'Pathway_betas.csv'))
interactions.to_csv(os.path.join(spacia_output, 'Interactions.csv'))
b_plus_fdr.to_csv(os.path.join(spacia_output, 'B_and_FDR.csv'))
# true_beta.to_csv(os.path.join(spacia_output, 'True_betas.csv'))